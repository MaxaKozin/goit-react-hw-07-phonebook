{"version":3,"sources":["components/Filter/Filter.module.css","components/Phonebook/Phonebook.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/InputForm/InputForm.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","components/Container/Container.js","App.js","index.js","components/InputForm/InputForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","rootReducer","devTools","process","axios","defaults","baseURL","getIsLoading","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","InputForm","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","find","item","alert","reset","onSubmit","className","styles","form","this","label","htmlFor","type","onChange","input","placeholder","autoComplete","autoFocus","btn","Component","connect","dispatch","contact","post","then","data","catch","contactsOperations","Filter","wrapper","defaultProps","actions","target","onDelete","contactId","delete","list","map","key","close","onClick","Container","title","children","section","heading","App","isLoadingContacts","fetchContacts","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f4c8dcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__uKNNQ\",\"item\":\"Phonebook_item__1FrRV\",\"close\":\"Phonebook_close__Ru4Oc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__1Tm7J\",\"heading\":\"Container_heading__2ErCF\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter } from './phonebook-actions';\n\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload)\n})\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload\n})\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport rootReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  })\n];\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter', '_persist']\n// }\n\nconst store = configureStore({\n  reducer: {\n    contacts: rootReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;","import axios from 'axios';\nimport { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } from './phonebook-actions';\n\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios.get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n}\n\nexport const addContact = ({ name, number }) => dispatch => {\n  const contact = {\n    name,\n    number\n  }\n\n  dispatch(addContactRequest());\n\n  axios.post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n}\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios.delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getIsLoading = state => state.contacts.loading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getContacts = state => state.contacts.contacts;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter))\n\n})","import React, { Component } from 'react';\nimport styles from './InputForm.module.css';\nimport PropTypes from 'prop-types';\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\nimport { connect } from 'react-redux';\nimport * as contactsOperations from '../../redux/phonebook/phonebook-operations';\n\n\nclass InputForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  state = {\n    name: '',\n    number: ''\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    if (this.props.contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} Already exists`);\n      this.reset();\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' })\n  }\n\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label} htmlFor=\"name\">\n          Name\n          </label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={styles.input}\n          name=\"name\"\n          value={this.state.name}\n          placeholder='Name'\n          autoComplete=\"off\"\n          autoFocus\n        />\n\n        <label className={styles.label} htmlFor=\"number\">\n          Number\n          </label>\n        <input\n          id=\"number\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={styles.input}\n          name=\"number\" value={this.state.number}\n          placeholder='Phone number'\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\" className={styles.btn}>Add contact</button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: getContacts(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) => dispatch(contactsOperations.addContact({ name, number }))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\n\nconst Filter = ({ filter, onChange }) => (\n  <div className={styles.wrapper}>\n    <label className={styles.label}>\n      Find by Name\n    <input className={styles.input} type=\"text\" value={filter} onChange={onChange} />\n    </label>\n  </div>\n);\nFilter.defaultProps = {\n  filter: ''\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  filter: getFilter(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.changeFilter(event.target.value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport styles from './Phonebook.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as contactsOperations from '../../redux/phonebook/phonebook-operations';\nimport { getVisibleContacts } from '../../redux/phonebook/phonebook-selectors';\n\nconst Phonebook = ({ contacts, onDelete }) => {\n  return (\n    <>\n      {contacts && (<ul className={styles.list}>\n        {contacts.map(({ name, number, id }) => (\n          name && (<li className={styles.item} key={id}>\n            <span>{name} : {number}</span>\n            <button type=\"button\" className={styles.close} onClick={() => onDelete(id)}>+</button>\n          </li>)\n\n        ))}\n      </ul>)}\n\n    </>\n\n  )\n}\n\nPhonebook.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    contacts: getVisibleContacts(state),\n  })\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import React from 'react';\nimport styles from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2 className={styles.heading}>\n      {title}\n    </h2>\n    {children}\n  </section>\n)\nContainer.defaultProps = {\n  title: ''\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node]).isRequired\n}\n\nexport default Container;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as contactsOperations from './redux/phonebook/phonebook-operations'\nimport InputForm from './components/InputForm/InputForm';\nimport Filter from \"./components/Filter/Filter\";\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Container from './components/Container/Container';\nimport { getIsLoading } from './redux/phonebook/phonebook-selectors';\n\nclass App extends Component {\n  state = {\n    isLoadingContacts: false\n  }\n\n  componentDidMount() {\n    this.props.fetchContacts()\n  }\n  render() {\n    return (\n      <>\n        <Container title='Phonebook'>\n          <InputForm />\n        </Container>\n        <Container title='Contacts'>\n          <Filter />\n          {this.props.isLoadingContacts && (<h2> Loading contacts...</h2>)}\n          < Phonebook />\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getIsLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__19Zkp\",\"label\":\"InputForm_label__ffqu2\",\"input\":\"InputForm_input__18_QU\",\"btn\":\"InputForm_btn__-Yutt\"};"],"sourceRoot":""}