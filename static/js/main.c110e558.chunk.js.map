{"version":3,"sources":["components/Filter/Filter.module.css","components/Phonebook/Phonebook.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","components/InputForm/InputForm.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","components/Container/Container.js","App.js","index.js","components/InputForm/InputForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","rootReducer","devTools","process","getIsLoading","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","axios","defaults","baseURL","InputForm","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","find","item","alert","reset","this","className","s","form","label","htmlFor","type","onChange","input","placeholder","autoComplete","autoFocus","btn","Component","connect","dispatch","contact","post","then","data","catch","contactsOperations","Filter","wrapper","defaultProps","actions","target","onDelete","contactId","delete","list","map","key","close","onClick","Container","title","children","section","heading","App","fetchContacts","isLoadingContacts","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c110e558.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__uKNNQ\",\"item\":\"Phonebook_item__1FrRV\",\"close\":\"Phonebook_close__Ru4Oc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__1Tm7J\",\"heading\":\"Container_heading__2ErCF\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter } from './phonebook-actions';\n\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload)\n})\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload\n})\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport rootReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  })\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: rootReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getIsLoading = state => state.contacts.loading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getContacts = state => state.contacts.contacts;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter))\n})","import axios from 'axios';\nimport { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } from './phonebook-actions';\n\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios.get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n}\n\nexport const addContact = ({ name, number }) => dispatch => {\n  const contact = {\n    name,\n    number\n  }\n\n  dispatch(addContactRequest());\n\n  axios.post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n}\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios.delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\nimport * as contactsOperations from '../../redux/phonebook/phonebook-operations';\n\nimport s from './InputForm.module.css';\n\n\nclass InputForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  state = {\n    name: '',\n    number: ''\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const { contacts, onSubmit } = this.props;\n    if (contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} Already exists`);\n      this.reset();\n      return;\n    }\n    onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' })\n  }\n\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor=\"name\">\n          Name\n          </label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={s.input}\n          name=\"name\"\n          value={name}\n          placeholder='Name'\n          autoComplete=\"off\"\n          autoFocus\n        />\n\n        <label className={s.label} htmlFor=\"number\">\n          Number\n          </label>\n        <input\n          id=\"number\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={s.input}\n          name=\"number\" value={number}\n          placeholder='Phone number'\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\" className={s.btn}>Add contact</button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: getContacts(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) => dispatch(contactsOperations.addContact({ name, number }))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => (\n  <div className={s.wrapper}>\n    <label className={s.label}>\n      Find by Name\n    <input className={s.input} type=\"text\" value={filter} onChange={onChange} />\n    </label>\n  </div>\n);\nFilter.defaultProps = {\n  filter: ''\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  filter: getFilter(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.changeFilter(event.target.value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport * as contactsOperations from '../../redux/phonebook/phonebook-operations';\nimport { getVisibleContacts } from '../../redux/phonebook/phonebook-selectors';\n\nimport s from './Phonebook.module.css';\n\nconst Phonebook = ({ contacts, onDelete }) => {\n  return (\n    <>\n      {contacts && (<ul className={s.list}>\n        {contacts.map(({ name, number, id }) => (\n          name && (<li className={s.item} key={id}>\n            <span>{name} : {number}</span>\n            <button type=\"button\" className={s.close} onClick={() => onDelete(id)}>+</button>\n          </li>)\n\n        ))}\n      </ul>)}\n    </>\n  )\n}\n\nPhonebook.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    contacts: getVisibleContacts(state),\n  })\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Container.module.css';\n\nconst Container = ({ title, children }) => (\n  <section className={s.section}>\n    <h2 className={s.heading}>\n      {title}\n    </h2>\n    {children}\n  </section>\n)\nContainer.defaultProps = {\n  title: ''\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node]).isRequired\n}\n\nexport default Container;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport InputForm from './components/InputForm/InputForm';\nimport Filter from \"./components/Filter/Filter\";\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Container from './components/Container/Container';\nimport { getIsLoading } from './redux/phonebook/phonebook-selectors';\nimport * as contactsOperations from './redux/phonebook/phonebook-operations'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts()\n  }\n  render() {\n    return (\n      <>\n        <Container title='Phonebook'>\n          <InputForm />\n        </Container>\n        <Container title='Contacts'>\n          <Filter />\n          {this.props.isLoadingContacts && (<h2> Loading contacts...</h2>)}\n          < Phonebook />\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getIsLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport App from './App';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__19Zkp\",\"label\":\"InputForm_label__ffqu2\",\"input\":\"InputForm_input__18_QU\",\"btn\":\"InputForm_btn__-Yutt\"};"],"sourceRoot":""}